name: Dependency Security

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'requirements.txt'
      - 'package.json'
      - 'package-lock.json'
      - 'renovate.json'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'requirements.txt'
      - 'package.json'
      - 'package-lock.json'
      - 'renovate.json'
  schedule:
    # Run weekly on Mondays at 2 AM UTC
    - cron: '0 2 * * 1'
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '18'

jobs:
  python-security:
    name: Python Dependencies
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies and security tools
      run: |
        python -m pip install --upgrade pip
        pip install pip-audit
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi

    - name: Run vulnerability scan
      run: |
        echo "Running Python dependency vulnerability scan..."

        # Run pip-audit (primary vulnerability scanner)
        if pip-audit; then
          echo "✅ pip-audit scan passed"
        else
          echo "❌ pip-audit found vulnerabilities"
          exit 1
        fi

        # Note: Safety CLI now requires authentication for scan command
        # Using pip-audit as the primary vulnerability scanner
        echo "ℹ️ Using pip-audit for vulnerability scanning (Safety CLI requires authentication)"

  nodejs-security:
    name: Node.js Dependencies
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        if [ -f package-lock.json ]; then
          npm ci
        else
          npm install
        fi

    - name: Run vulnerability scan
      run: |
        echo "Running Node.js dependency vulnerability scan..."

        if npm audit --audit-level=moderate; then
          echo "✅ npm audit passed"
        else
          echo "❌ npm audit found vulnerabilities"
          exit 1
        fi

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Dependency Review
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: moderate
        allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC, GPL-3.0

  renovate-check:
    name: Renovate Configuration
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Validate Renovate configuration
      run: |
        echo "Checking Renovate configuration..."

        if [ -f renovate.json ]; then
          echo "✅ Renovate configuration found"

          # Basic validation
          if jq empty renovate.json; then
            echo "✅ Renovate JSON is valid"
          else
            echo "❌ Renovate JSON is invalid"
            exit 1
          fi

          # Check for security settings
          if jq -e '.vulnerabilityAlerts' renovate.json >/dev/null 2>&1; then
            echo "✅ Vulnerability alerts configured"
          else
            echo "ℹ️ Consider enabling vulnerability alerts"
          fi
        else
          echo "⚠️ No renovate.json found - automated dependency updates not configured"
        fi

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [python-security, nodejs-security, renovate-check]
    if: always()

    steps:
    - name: Generate summary
      run: |
        echo "## 🔒 Dependency Security Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        if [ "${{ needs.python-security.result }}" == "success" ]; then
          echo "✅ **Python Dependencies**: Secure" >> $GITHUB_STEP_SUMMARY
        elif [ "${{ needs.python-security.result }}" == "failure" ]; then
          echo "❌ **Python Dependencies**: Vulnerabilities found" >> $GITHUB_STEP_SUMMARY
        else
          echo "⏭️ **Python Dependencies**: Skipped" >> $GITHUB_STEP_SUMMARY
        fi

        if [ "${{ needs.nodejs-security.result }}" == "success" ]; then
          echo "✅ **Node.js Dependencies**: Secure" >> $GITHUB_STEP_SUMMARY
        elif [ "${{ needs.nodejs-security.result }}" == "failure" ]; then
          echo "❌ **Node.js Dependencies**: Vulnerabilities found" >> $GITHUB_STEP_SUMMARY
        else
          echo "⏭️ **Node.js Dependencies**: Skipped" >> $GITHUB_STEP_SUMMARY
        fi

        if [ "${{ needs.renovate-check.result }}" == "success" ]; then
          echo "✅ **Renovate Configuration**: Valid" >> $GITHUB_STEP_SUMMARY
        else
          echo "⚠️ **Renovate Configuration**: Check required" >> $GITHUB_STEP_SUMMARY
        fi

        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🛡️ Dependency Security Active:" >> $GITHUB_STEP_SUMMARY
        echo "- Python vulnerability scanning (Safety, pip-audit)" >> $GITHUB_STEP_SUMMARY
        echo "- Node.js vulnerability scanning (npm audit)" >> $GITHUB_STEP_SUMMARY
        echo "- Renovate automated dependency updates" >> $GITHUB_STEP_SUMMARY
        echo "- Pull request dependency review" >> $GITHUB_STEP_SUMMARY
