# ESP32 #4
substitutions:
  name: den_audio_led
  friendly_name: Den Audio LED
  n_pixels: "70"

esphome:
  name: $name

  includes:
  - src/audio-reactive-led-strip/audio-reactive-led-strip
  - src/audio-reactive-led-strip/esphome-music-leds

esp32:
  board: esp32doit-devkit-v1

esp32_touch:
  #  setup_mode: True

network:
  enable_ipv6: true
  min_ipv6_addr_count: 2


binary_sensor:
- platform: esp32_touch
  name: Touch Pad on ESP32 ${friendly_name}
  pin: GPIO32
  threshold: 1000
  on_press:
    then:
      - light.toggle: LedsStrip
# PIR Sensor on GPIO34
- platform: gpio
  pin: GPIO34
  name: ${friendly_name} Motion
  device_class: motion
      

light:
  - platform: fastled_clockless
  #- platform: fastled_spi
    id: LedsStrip
    chipset: NEOPIXEL
    #chipset: APA102
    pin: GPIO21
    #data_pin: GPIO21
    #clock_pin: GPIO17
    # If you change the num_leds, you should change the N_PIXELS defined in music_leds_esphome.h corresponding
    num_leds: ${n_pixels}
    #rgb_order: BGR
    name: "${friendly_name} Music LEDs"
    effects:
      - addressable_rainbow:
      - addressable_scan:
      - addressable_random_twinkle:
      - addressable_fireworks:
      - addressable_flicker:
      - addressable_lambda:
          name: Scroll with Music
          update_interval: 0s
          lambda: |-
            ((MusicLeds*) id(music_leds))->ShowFrame(MODE_SCROLL, &it);
      - addressable_lambda:
          name: Energy with Music
          update_interval: 0s
          lambda: |-
            ((MusicLeds*) id(music_leds))->ShowFrame(MODE_ENERGY, &it);
      - addressable_lambda:
          name: Spectrum with Music
          update_interval: 0s
          lambda: |-
            ((MusicLeds*) id(music_leds))->ShowFrame(MODE_SPECTRUM, &it);

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  domain: .home.geoffdavis.com

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${friendly_name} AP
    password: !secret fallback_password

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  platform: esphome
  password: !secret ota_password

# Enable Web server.
web_server:
  port: 80

# Sync time with Home Assistant.
time:
  - platform: homeassistant
    id: homeassistant_time

switch:
  - platform: restart
    name: ${friendly_name} Restart

# Text sensors with general information.
text_sensor:
  # Expose ESPHome version as sensor.
  - platform: version
    name: ${friendly_name} ESPHome Version
  # Expose WiFi information as sensors.
  - platform: wifi_info
    ip_address:
      name: ${friendly_name} IP
    ssid:
      name: ${friendly_name} SSID
    bssid:
      name: ${friendly_name} BSSID

# Sensors with general information.
sensor:
  # Uptime sensor.
  - platform: uptime
    name: ${friendly_name} Uptime

  # WiFi Signal sensor.
  - platform: wifi_signal
    name: ${friendly_name} WiFi Signal
    update_interval: 60s


custom_component:
  - lambda: |-
      auto my_music_leds = new MusicLeds(${n_pixels}, 0.0025);
      return {my_music_leds};
    components:
      - id: music_leds